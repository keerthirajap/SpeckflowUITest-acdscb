// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace InfinityMatrix.Niraiya.UITests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("01_HomeScreen", Description=@"![01_HomeScreen]
Link to a feature: [HomeScreen](InfinityMatrix.Niraiya.UITests/Features/01_HomeScreen.feature)
***Further read***: **[Learn more about how to generate Living Documentation](https://docs.specflow.org/projects/specflow-livingdoc/en/latest/LivingDocGenerator/Generating-Documentation.html)**", SourceFile="Features\\01_HomeScreen.feature", SourceLine=0)]
    public partial class _01_HomeScreenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "01_HomeScreen.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "01_HomeScreen", @"![01_HomeScreen]
Link to a feature: [HomeScreen](InfinityMatrix.Niraiya.UITests/Features/01_HomeScreen.feature)
***Further read***: **[Learn more about how to generate Living Documentation](https://docs.specflow.org/projects/specflow-livingdoc/en/latest/LivingDocGenerator/Generating-Documentation.html)**", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void _01_00CheckHomeScreen(string environment, string browser, string device, string millisecond, string pageLoadedInSeconds, string pageScrollStep, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HomeScreen",
                    "FirstCAll",
                    "Parallel"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Environment", environment);
            argumentsOfScenario.Add("Browser", browser);
            argumentsOfScenario.Add("Device", device);
            argumentsOfScenario.Add("Millisecond", millisecond);
            argumentsOfScenario.Add("PageLoadedInSeconds", pageLoadedInSeconds);
            argumentsOfScenario.Add("PageScrollStep", pageScrollStep);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_00 Check Home Screen", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("Get Home page URL from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.When(string.Format("The Home page is loaded for browser {0} for device {1}", browser, device), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.When("Accept cookie button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, chrome-GalaxyS5", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Chrome_GalaxyS5()
        {
#line 7
this._01_00CheckHomeScreen("chrome-GalaxyS5", "chrome", "Galaxy S5", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, chrome-iPhoneX", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Chrome_IPhoneX()
        {
#line 7
this._01_00CheckHomeScreen("chrome-iPhoneX", "chrome", "iPhone X", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, chrome-iPad", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Chrome_IPad()
        {
#line 7
this._01_00CheckHomeScreen("chrome-iPad", "chrome", "iPad", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, chrome-Desktop", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Chrome_Desktop()
        {
#line 7
this._01_00CheckHomeScreen("chrome-Desktop", "chrome", "Desktop", "500", "15", "500", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, firefox-GalaxyS5", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Firefox_GalaxyS5()
        {
#line 7
this._01_00CheckHomeScreen("firefox-GalaxyS5", "firefox", "Galaxy S5", "50", "20", "550", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_00 Check Home Screen, firefox-Desktop", new string[] {
                "HomeScreen",
                "FirstCAll",
                "Parallel"}, SourceLine=13)]
        public virtual void _01_00CheckHomeScreen_Firefox_Desktop()
        {
#line 7
this._01_00CheckHomeScreen("firefox-Desktop", "firefox", "Desktop", "50", "20", "500", ((string[])(null)));
#line hidden
        }
        
        public virtual void _01_10GetHomeScreen(string environment, string browser, string device, string millisecond, string pageLoadedInSeconds, string pageScrollStep, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HomeScreen",
                    "scrollstepbystep",
                    "Parallel"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Environment", environment);
            argumentsOfScenario.Add("Browser", browser);
            argumentsOfScenario.Add("Device", device);
            argumentsOfScenario.Add("Millisecond", millisecond);
            argumentsOfScenario.Add("PageLoadedInSeconds", pageLoadedInSeconds);
            argumentsOfScenario.Add("PageScrollStep", pageScrollStep);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_10 Get Home Screen", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 23
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 24
 testRunner.Given("Get Home page URL from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 25
 testRunner.When(string.Format("The Home page is loaded for browser {0} for device {1}", browser, device), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 26
 testRunner.When("Accept cookie button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 27
 testRunner.Then(string.Format("The Home page loaded with in {0} seconds", pageLoadedInSeconds), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.And("Take Home page screenshot with name suffix \'ScrToBottom_pgeload\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("We were able to get Home page total dimention", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And(string.Format("The Home page is scrolled step by step to end by millisecond delay {0} by {1}", millisecond, pageScrollStep), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, chrome-GalaxyS5", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Chrome_GalaxyS5()
        {
#line 23
this._01_10GetHomeScreen("chrome-GalaxyS5", "chrome", "Galaxy S5", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, chrome-iPhoneX", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Chrome_IPhoneX()
        {
#line 23
this._01_10GetHomeScreen("chrome-iPhoneX", "chrome", "iPhone X", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, chrome-iPad", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Chrome_IPad()
        {
#line 23
this._01_10GetHomeScreen("chrome-iPad", "chrome", "iPad", "500", "15", "600", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, chrome-Desktop", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Chrome_Desktop()
        {
#line 23
this._01_10GetHomeScreen("chrome-Desktop", "chrome", "Desktop", "500", "15", "500", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, firefox-GalaxyS5", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Firefox_GalaxyS5()
        {
#line 23
this._01_10GetHomeScreen("firefox-GalaxyS5", "firefox", "Galaxy S5", "50", "20", "550", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_10 Get Home Screen, firefox-Desktop", new string[] {
                "HomeScreen",
                "scrollstepbystep",
                "Parallel"}, SourceLine=33)]
        public virtual void _01_10GetHomeScreen_Firefox_Desktop()
        {
#line 23
this._01_10GetHomeScreen("firefox-Desktop", "firefox", "Desktop", "50", "20", "500", ((string[])(null)));
#line hidden
        }
        
        public virtual void _01_20AcceptCookieButton(string environment, string browser, string device, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "HomeScreen",
                    "AcceptCookieButton",
                    "Parallel"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Environment", environment);
            argumentsOfScenario.Add("Browser", browser);
            argumentsOfScenario.Add("Device", device);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_20 Accept Cookie Button", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 42
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 43
 testRunner.Given("Get Home page URL from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 44
 testRunner.And(string.Format("The Home page is loaded for browser {0} for device {1}", browser, device), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("Accept cookie alert is visible for first time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("Accept cookie button is visible for first time", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("Local storage value for Accept cookie \'ApplicationStorageName_AcceptCookie\' is \'N" +
                        "o\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("Take Home page screenshot with name suffix \'ScrToBottom_pgeload\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.When("Accept cookie button is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 50
 testRunner.And("Accept cookie alert should not be visisble", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("Accept cookie button should not be visisble", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("Local storage value for Accept cookie \'ApplicationStorageName_AcceptCookie\' is \'Y" +
                        "es\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, chrome-GalaxyS5", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Chrome_GalaxyS5()
        {
#line 42
this._01_20AcceptCookieButton("chrome-GalaxyS5", "chrome", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, chrome-iPhoneX", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Chrome_IPhoneX()
        {
#line 42
this._01_20AcceptCookieButton("chrome-iPhoneX", "chrome", "iPhone X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, chrome-iPad", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Chrome_IPad()
        {
#line 42
this._01_20AcceptCookieButton("chrome-iPad", "chrome", "iPad", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, chrome-Desktop", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Chrome_Desktop()
        {
#line 42
this._01_20AcceptCookieButton("chrome-Desktop", "chrome", "Desktop", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, firefox-GalaxyS5", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Firefox_GalaxyS5()
        {
#line 42
this._01_20AcceptCookieButton("firefox-GalaxyS5", "firefox", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_20 Accept Cookie Button, firefox-Desktop", new string[] {
                "HomeScreen",
                "AcceptCookieButton",
                "Parallel"}, SourceLine=55)]
        public virtual void _01_20AcceptCookieButton_Firefox_Desktop()
        {
#line 42
this._01_20AcceptCookieButton("firefox-Desktop", "firefox", "Desktop", ((string[])(null)));
#line hidden
        }
        
        public virtual void _01_30OnIPAddressChange(string environment, string browser, string device, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mstest:donotparallelize",
                    "HomeScreen",
                    "Parallel"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Environment", environment);
            argumentsOfScenario.Add("Browser", browser);
            argumentsOfScenario.Add("Device", device);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_30 On IP Address Change", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 64
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 65
 testRunner.Given("Get Home page URL from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 66
 testRunner.And(string.Format("The Home page is loaded for browser {0} for device {1}", browser, device), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("We were able to get Home page total dimention", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("The Home page is scrolled to bottom", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.And("Take Home page screenshot with name suffix \'IPAddressChang_pgeload\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
 testRunner.And("IP Address details should not be empty for fields \'IP\' \'ISP\' \'Region\' \'Country\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.When("On IP Address Change configured from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 72
 testRunner.Then("IP Address details should be changed for fields \'IP\' \'ISP\' \'Region\' \'Country\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, chrome-GalaxyS5", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Chrome_GalaxyS5()
        {
#line 64
this._01_30OnIPAddressChange("chrome-GalaxyS5", "chrome", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, chrome-iPhoneX", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Chrome_IPhoneX()
        {
#line 64
this._01_30OnIPAddressChange("chrome-iPhoneX", "chrome", "iPhone X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, chrome-iPad", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Chrome_IPad()
        {
#line 64
this._01_30OnIPAddressChange("chrome-iPad", "chrome", "iPad", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, chrome-Desktop", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Chrome_Desktop()
        {
#line 64
this._01_30OnIPAddressChange("chrome-Desktop", "chrome", "Desktop", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, firefox-GalaxyS5", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Firefox_GalaxyS5()
        {
#line 64
this._01_30OnIPAddressChange("firefox-GalaxyS5", "firefox", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_30 On IP Address Change, firefox-Desktop", new string[] {
                "mstest:donotparallelize",
                "HomeScreen",
                "Parallel"}, SourceLine=75)]
        public virtual void _01_30OnIPAddressChange_Firefox_Desktop()
        {
#line 64
this._01_30OnIPAddressChange("firefox-Desktop", "firefox", "Desktop", ((string[])(null)));
#line hidden
        }
        
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation(string environment, string browser, string device, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "DevToolsNotAllowed",
                    "HomeScreen",
                    "Parallel"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Environment", environment);
            argumentsOfScenario.Add("Browser", browser);
            argumentsOfScenario.Add("Device", device);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_40 Home Dev_Tools Not Allowed Redirect Validation", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 84
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 85
 testRunner.Given("Get Home page URL from AppSetting", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 86
 testRunner.And(string.Format("The Homepage is loaded for browser with devtools {0} for device {1}", browser, device), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.When("Dev Tools Tab is opened in browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
 testRunner.Then("Validate user shown as dev tools not allowed from h1 tag", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, chrome-GalaxyS5", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Chrome_GalaxyS5()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("chrome-GalaxyS5", "chrome", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, chrome-iPhoneX", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Chrome_IPhoneX()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("chrome-iPhoneX", "chrome", "iPhone X", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, chrome-iPad", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Chrome_IPad()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("chrome-iPad", "chrome", "iPad", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, chrome-Desktop", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Chrome_Desktop()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("chrome-Desktop", "chrome", "Desktop", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, firefox-GalaxyS5", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Firefox_GalaxyS5()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("firefox-GalaxyS5", "firefox", "Galaxy S5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("01_40 Home Dev_Tools Not Allowed Redirect Validation, firefox-Desktop", new string[] {
                "DevToolsNotAllowed",
                "HomeScreen",
                "Parallel"}, SourceLine=91)]
        public virtual void _01_40HomeDev_ToolsNotAllowedRedirectValidation_Firefox_Desktop()
        {
#line 84
this._01_40HomeDev_ToolsNotAllowedRedirectValidation("firefox-Desktop", "firefox", "Desktop", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
